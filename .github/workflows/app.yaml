name: App

on:
  push:
    branches: [main]
  
  workflow_dispatch:
    
jobs:
  terraform-test:
    name: 'Terraform - Test'
    runs-on: 'ubuntu-latest'
    environment: test
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_ACTIONS_WORKING_DIR: './terraform'

    defaults:
      run:
        working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var environment="test" -no-color -out tfplan

      - name: Terraform Apply
        id: Apply
        run: terraform apply -no-color -auto-approve -input=false tfplan

  deploy-test:
    name: 'Deploy - Test'
    runs-on: 'ubuntu-latest'
    environment: test
    needs: terraform-test

    steps:
      - uses: Azure/login@v1.1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'
      
      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
              az storage blob upload-batch --account-name <STORAGE_ACCOUNT_NAME>  --auth-mode key -d '$web' -s .

      - name: Purge CDN endpoint
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az network front-door purge-endpoint --content-paths  "/*" --name "CDN_ENDPOINT" --resource-group "RESOURCE_GROUP"

      - name: logout
        run: |
              az logout
        if: always()
    

  terraform-live:
    name: 'Terraform - Live'
    runs-on: 'ubuntu-latest'
    environment: live
    needs: terraform-test
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      TF_ACTIONS_WORKING_DIR: './terraform'

    defaults:
      run:
        working-directory: ${{ env.TF_ACTIONS_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="resource_group_name=propt-tf-live-rg-ukso" -backend-config="storage_account_name=propttflivesaukso"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var environment="live" -no-color -out tfplan

      - name: Terraform Apply
        id: Apply
        run: terraform apply -no-color -auto-approve -input=false tfplan
